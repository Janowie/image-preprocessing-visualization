{"version":3,"sources":["static/prague.jpg","components/filters/filters.js","static/mario_bg.png","components/canvas/canvases.js","components/canvas/kernels.js","components/canvas/kernel.js","components/gui.js","App.js","reportWebVitals.js","index.js"],"names":["Canvases","props","canvas","React","useRef","canvas_output","useState","state","setState","useEffect","image","crossOrigin","src","Mario","onload","initCanvases","current","getContext","ctx","drawKernel","interval","pixel_size","background_color","tick_counter","draw","drawLine","f_x","f_y","t_x","t_y","beginPath","moveTo","lineTo","strokeStyle","stroke","drawPixels","row","height","width","drawBackgroundImage","offset","fillStyle","fillRect","drawImage","ctx_output","getPixel","x","y","getImageData","data","size","kernel_size","dot_size","strokeRect","j","i","values","push","getKernelValues","color","drawOutputPixel","kernel","v","r","g","b","a","length","split_channels","dot","filter_conv","className","ref","KernelSettings","setKernel","new_kernel","Math","pow","handleChange","e","index","parseFloat","target","value","map","val","Fragment","toString","name","type","onChange","Kernel","Image","tick","ticks_per_row","floor","canvas_width","num_rows","canvas_height","stopTick","clearInterval","key","htmlFor","id","parseInt","fps","onClick","setInterval","toggleAnimation","GUI","filtered_image","canvas_dimensions","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0837073.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/prague.bb819fb6.jpg\";","import React from 'react';\r\nimport {FormControl, InputLabel, Select, Input } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {FiltersManager} from './FiltersManager.js';\r\nimport FiltersArgs from './filtersArgs.js';\r\nimport FiltersSelect from './filtersSelect.js';\r\n\r\n\r\nexport const Filters = props => {\r\n\r\n  const { canvas_dimensions, set_filtered_image } = props;\r\n  const [state, setState] = React.useState({\r\n    filtersManager: null,\r\n    currentFilter: null\r\n  });\r\n  const image = document.querySelector(\".App .canvas-area > img\");\r\n\r\n  React.useEffect(() => {\r\n    if (state.filtersManager) {\r\n      state.filtersManager.setCanvasDimensions(canvas_dimensions);\r\n    }\r\n  }, [canvas_dimensions])\r\n\r\n  React.useEffect(() => {\r\n    if (state.filtersManager == null) {\r\n      setState({\r\n        ...state,\r\n        filtersManager: new FiltersManager()\r\n      })\r\n    }\r\n  }, [state.filters]);\r\n\r\n  const handleClick = () => {\r\n    if (state.currentFilter) {\r\n      filter(state.currentFilter.name, state.currentFilter.args);\r\n    }\r\n    else {\r\n      alert(\"No filter selected!\");\r\n    }\r\n  }\r\n\r\n  const updateState = (key, value) => {\r\n    setState({\r\n      ...state,\r\n      [key]: value\r\n    })\r\n  }\r\n\r\n  const updateFilterArg = data => {\r\n    updateState(\"currentFilter\", {\r\n          ...state.currentFilter,\r\n          args: {\r\n            ...state.currentFilter.args,\r\n            [data.name]: data.value\r\n          }\r\n        })\r\n  }\r\n\r\n  const filter = (filter, args) => {\r\n    if (state.filtersManager && image) {\r\n      let filtered_image = state.filtersManager.runFilter(image, filter, args)\r\n      set_filtered_image(filtered_image);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n\r\n      <h1>Filters</h1>\r\n\r\n      <FormControl variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-age-native-simple\">Filters</InputLabel>\r\n        <FiltersSelect\r\n          currentFilter={state.currentFilter}\r\n          setCurrentFilter={data => updateState('currentFilter', data)}\r\n          filters={state.filtersManager}\r\n        />\r\n      </FormControl>\r\n\r\n      <FiltersArgs\r\n        currentFilter={state.currentFilter}\r\n        setCurrentFilterArgs={updateFilterArg}\r\n      />\r\n\r\n      <Button\r\n        variant=\"contained\"\r\n         color=\"primary\"\r\n        onClick={handleClick}\r\n      >Apply filter</Button>\r\n    </div>\r\n\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/mario_bg.d6578ab6.png\";","import React from \"react\";\r\nimport Mario from \"../../static/mario_bg.png\";\r\nimport {dot} from \"mathjs\";\r\n\r\nexport default function Canvases(props) {\r\n\r\n  const canvas = React.useRef(null);\r\n  const canvas_output = React.useRef(null);\r\n\r\n  const [state, setState] = React.useState({\r\n    \"ctx\": null,\r\n    \"ctx_output\": null,\r\n  })\r\n\r\n  // Initialize state\r\n  React.useEffect(() => {\r\n    if (canvas && canvas_output) {\r\n      props.state.image.crossOrigin = 'anonymous';\r\n      props.state.image.src = Mario;\r\n      props.state.image.onload = () => {\r\n\r\n        initCanvases();\r\n\r\n        setState({\r\n          ...state,\r\n          \"ctx\": canvas.current.getContext(\"2d\"),\r\n          \"ctx_output\": canvas_output.current.getContext(\"2d\")\r\n        });\r\n\r\n        // console.log(canvas.current.height, canvas.current.width);\r\n        // props.setCanvasDims(640,640);\r\n      }\r\n    }\r\n  }, [canvas, canvas_output])\r\n\r\n  React.useEffect(() => {\r\n    if (state.ctx) {\r\n      drawKernel(0, 0);\r\n    }\r\n  }, [state.ctx])\r\n\r\n  React.useEffect(() => {\r\n    if (\r\n      props.state.interval == null && props.state.pixel_size > 0\r\n    ) {\r\n      initCanvases();\r\n    }\r\n  }, [props.state.pixel_size, props.state.background_color])\r\n\r\n  React.useEffect(() => {\r\n    if (props.tick_counter) {\r\n      draw();\r\n    }\r\n  })\r\n\r\n  // ###########################################################################################\r\n  // ## METHODS\r\n  // ###########################################################################################\r\n\r\n  const drawLine = (ctx, f_x, f_y, t_x, t_y) => {\r\n    ctx.beginPath();\r\n    ctx.moveTo(f_x, f_y);\r\n    ctx.lineTo(t_x, t_y);\r\n    ctx.strokeStyle = 'rgba(182,182,182,0.5)';\r\n    if (props.state.pixel_size < 3)\r\n      ctx.strokeStyle = 'rgba(182,182,182,0.01)';\r\n    ctx.stroke();\r\n  }\r\n\r\n  const drawPixels = (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n    for (let row = 0; row < canvas.height; row += props.state.pixel_size) {\r\n      drawLine(ctx, 0, row, canvas.width, row);\r\n      drawLine(ctx, row, 0, row, canvas.height);\r\n    }\r\n  }\r\n\r\n  const drawBackgroundImage = (canvas) => {\r\n\r\n    let ctx = canvas.getContext(\"2d\");\r\n    let offset = props.state.pixel_size;\r\n\r\n    // Draw background\r\n    ctx.fillStyle = props.state.background_color;\r\n    ctx.fillRect(0, 0, 1000, 1000);\r\n\r\n    // Draw image\r\n    ctx.drawImage(props.state.image, offset, offset, canvas.height-offset*2, canvas.width-offset*2);\r\n    drawPixels(canvas);\r\n\r\n  }\r\n\r\n  const initCanvases = () => {\r\n    drawBackgroundImage(canvas.current);\r\n    let ctx_output = canvas_output.current.getContext('2d');\r\n    // Draw background\r\n    ctx_output.fillStyle = props.state.background_color;\r\n    ctx_output.fillRect(0, 0, 1000, 1000);\r\n    drawPixels(canvas_output.current);\r\n  }\r\n\r\n  const getPixel = (x, y) => {\r\n    if (state.ctx) {\r\n      let pixel = state.ctx.getImageData(x, y, 1, 1);\r\n      let data = pixel.data;\r\n\r\n      return data;\r\n    }\r\n    return [];\r\n  }\r\n\r\n  const drawOutputPixel = (x, y, color) => {\r\n    if (state.ctx_output) {\r\n      state.ctx_output.fillStyle = color;\r\n      state.ctx_output.fillRect(x, y, props.state.pixel_size, props.state.pixel_size);\r\n    }\r\n  }\r\n\r\n  const split_channels = (values) => {\r\n    let r = [];\r\n    let g = [];\r\n    let b = [];\r\n    let a = [];\r\n\r\n    for (let i = 0; i < values.length; i++) {\r\n      r.push(values[i][0]);\r\n      g.push(values[i][1]);\r\n      b.push(values[i][2]);\r\n      a.push(values[i][3]);\r\n    }\r\n\r\n    return [r, g, b, a];\r\n  }\r\n\r\n  const filter_conv = (x, y, values) => {\r\n\r\n    let kernel = props.kernel;\r\n    let v = split_channels(values);\r\n\r\n    let color = `rgba(${dot(v[0], kernel)},${dot(v[1], kernel)},${dot(v[2], kernel)},255)`;\r\n    // let color = `rgba(${v[0][4]},${v[1][4]},${v[2][4]},255)`;\r\n    // console.log(\"color\", color);\r\n\r\n    return color;\r\n  }\r\n\r\n  const drawKernel = (x, y) => {\r\n\r\n    let border_width = 1;\r\n    let size = props.state.kernel_size * props.state.pixel_size - border_width;\r\n    let dot_size = 2;\r\n\r\n    state.ctx.fillStyle = \"rgba(44, 62, 80,0.5)\";\r\n    state.ctx.fillRect(x, y, size, size);\r\n    state.ctx.strokeStyle = \"rgba(241, 196, 15,1.0)\";\r\n    state.ctx.strokeRect(x, y, size, size);\r\n\r\n    for (let j = 0; j < props.state.kernel_size; j++) {\r\n      for (let i = 0; i < props.state.kernel_size; i++) {\r\n        if (i === 1 && j === 1) {\r\n          dot_size = 6\r\n        }\r\n        else {\r\n          dot_size = 2\r\n        }\r\n          state.ctx.fillRect((x + props.state.pixel_size / 2) + props.state.pixel_size * i - dot_size/2, (y + props.state.pixel_size / 2) + props.state.pixel_size * j - dot_size/2, dot_size, dot_size);\r\n      }\r\n    }\r\n  }\r\n\r\n  const getKernelValues = (x, y) => {\r\n    let values = [];\r\n    for (let j = 0; j < props.state.kernel_size; j++) {\r\n      for (let i = 0; i < props.state.kernel_size; i++) {\r\n        values.push(getPixel((x + props.state.pixel_size / 2) + props.state.pixel_size * i, (y + props.state.pixel_size / 2) + props.state.pixel_size * j))\r\n      }\r\n    }\r\n    return values;\r\n  }\r\n\r\n  const draw = () => {\r\n\r\n    if (!state.ctx) {\r\n      return null;\r\n    }\r\n\r\n    let x = props.tick_counter.x * props.state.pixel_size;\r\n    let y = props.tick_counter.y * props.state.pixel_size;\r\n\r\n    // Original canvas\r\n    drawBackgroundImage(canvas.current);\r\n    let values = getKernelValues(x, y);\r\n    drawKernel(x, y);\r\n\r\n    // Output canvas\r\n    drawOutputPixel(x + props.state.pixel_size, y + props.state.pixel_size, filter_conv(x, y, values));\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"row mb-5\">\r\n      <div className=\"col-lg-6 col-md-12 col-sm-12\">\r\n        <h3> Original </h3>\r\n        <canvas\r\n          ref={canvas}\r\n          width=\"640\"\r\n          height=\"640\"\r\n        >\r\n          Your browser does not support the HTML5 canvas tag.\r\n        </canvas>\r\n      </div>\r\n      <div className=\"col-lg-6 col-md-12 col-sm-12\">\r\n        <h3> Filtered </h3>\r\n        <canvas\r\n          ref={canvas_output}\r\n          width=\"640\"\r\n          height=\"640\"\r\n        >\r\n          Your browser does not support the HTML5 canvas tag.\r\n        </canvas>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}","import React from \"react\";\r\n\r\nexport default function KernelSettings(props) {\r\n\r\n  const [kernel, setKernel] = React.useState(null)\r\n\r\n  React.useEffect(() => {\r\n\r\n    if (kernel === null) {\r\n      if (props.kernel.length) {\r\n        setKernel(props.kernel);\r\n      }\r\n      else {\r\n        let new_kernel = []\r\n        for (let i = 0; i < Math.pow(props.kernel_size, 2); i++) {\r\n          new_kernel.push(0);\r\n        }\r\n        setKernel(new_kernel);\r\n      }\r\n    }\r\n\r\n  })\r\n\r\n\r\n  const handleChange = (e, index) => {\r\n    let new_kernel = kernel;\r\n    new_kernel[index] = parseFloat(e.target.value);\r\n    props.setKernel(new_kernel);\r\n    setKernel(new_kernel);\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-group pt-3\">\r\n      <br/>\r\n      <p>Kernel</p>\r\n      {\r\n        (kernel &&\r\n      kernel.map((val, index) => {\r\n        if (index > 0 && index % props.kernel_size === 0)\r\n          return (\r\n            <React.Fragment\r\n              key={`kernel_input_fragment_${index.toString()}`}\r\n            >\r\n              <br key={`kernel_input_br_${index.toString()}`}/>\r\n              <input\r\n                key={`kernel_input_${index.toString()}`}\r\n                name={`kernel_input_${index.toString()}`}\r\n                type=\"text\"\r\n                value={val || 0}\r\n                onChange={(e) => handleChange(e, index)}\r\n                size=\"3\" />\r\n            </React.Fragment>\r\n          )\r\n        else\r\n          return (\r\n            <input\r\n              key={`kernel_input_${index.toString()}`}\r\n              name={`kernel_input_${index.toString()}`}\r\n              type=\"text\"\r\n              value={val || 0}\r\n              onChange={(e) => handleChange(e, index)}\r\n              size=\"3\" />\r\n          )\r\n      })\r\n        )}\r\n\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport Canvases from \"./canvases\";\r\nimport KernelSettings from \"./kernels\";\r\n\r\n\r\nexport default function Kernel(props) {\r\n\r\n  let tick_counter = null;\r\n\r\n  const [state, setState] = React.useState({\r\n    \"interval\": null,\r\n    \"kernel_size\": 3,\r\n    \"kernel\": [ // Initialized with a gaussian blur\r\n        1/16, 1/8, 1/16,\r\n        1/8, 1/4, 1/8,\r\n        1/16, 1/8, 1/16\r\n    ],\r\n    \"pixel_size\": 18,\r\n    \"fps\": 100,\r\n    \"image\": new Image(),\r\n    \"background_color\": \"#e74c3c\",\r\n    \"canvas_height\": 640,\r\n    \"canvas_width\": 640,\r\n    \"tick_counter\": {\r\n        \"x\": 0,\r\n        \"y\": 0\r\n      }\r\n  })\r\n\r\n  const tick = () => {\r\n\r\n    if (!tick_counter) {\r\n      tick_counter = {\r\n        \"x\": 0,\r\n        \"y\": 0\r\n      }\r\n    }\r\n\r\n    let ticks_per_row = Math.floor(state.canvas_width / state.pixel_size) - Math.floor(state.kernel_size/2) + 2 - state.kernel_size;\r\n    let num_rows = Math.floor(state.canvas_height / state.pixel_size) + 2 - state.kernel_size;\r\n\r\n    // Stop at the end\r\n    if (tick_counter.y == num_rows - 1 && tick_counter.x == ticks_per_row) {\r\n      stopTick();\r\n      return null;\r\n    }\r\n\r\n    // Update position\r\n    if (tick_counter.x < ticks_per_row) {\r\n      tick_counter.x += 1;\r\n    }\r\n    else {\r\n      tick_counter.x = 0;\r\n      // Set y\r\n      if (tick_counter.y < num_rows) {\r\n        tick_counter.y += 1;\r\n      }\r\n    }\r\n\r\n    setState({\r\n      ...state,\r\n      \"tick_counter\": tick_counter\r\n    })\r\n\r\n  }\r\n\r\n  const stopTick = () => {\r\n    // Stop animation - set tick_counter\r\n    clearInterval(state.interval);\r\n    setState({\r\n      ...state,\r\n      \"interval\": null,\r\n      \"tick_counter\": tick_counter\r\n    })\r\n  }\r\n\r\n  const toggleAnimation = () => {\r\n    if (state.interval == null) {\r\n      // Reset tick counter\r\n      if (state.tick_counter)\r\n        tick_counter = state.tick_counter;\r\n      let interval = setInterval(tick, state.fps);\r\n      setState({\r\n        ...state,\r\n        \"interval\": interval\r\n      })\r\n    }\r\n    else\r\n      stopTick();\r\n  }\r\n\r\n  const handleClick = () => {\r\n    if (state.canvas_width && state.canvas_height) {\r\n      toggleAnimation();\r\n    }\r\n  }\r\n\r\n  const handleChange = (key, value) => {\r\n    setState({\r\n      ...state,\r\n      [key]: value\r\n    })\r\n  }\r\n\r\n  return (\r\n    <section className=\"container mario-canvas\">\r\n\r\n      <h1 className=\"mt-3 mb-4\">Filter visualization</h1>\r\n\r\n      <article className=\"controls mb-5\">\r\n\r\n        <h3>Options</h3>\r\n\r\n        <div className=\"form-group pt-3\">\r\n          <label htmlFor=\"background_color\" className=\"form-label\">Background color: </label>\r\n          <input type=\"color\" className=\"form-control\" id=\"background_color\"\r\n                 value={state.background_color}\r\n                 onChange={e => handleChange(e.target.id, e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group pt-3\">\r\n          <label htmlFor=\"pixel_size\" className=\"form-label\">Pixel size: </label>\r\n          <input type=\"number\" className=\"form-control\" id=\"pixel_size\"\r\n                 value={state.pixel_size}\r\n                 onChange={e =>\r\n                   handleChange(e.target.id, parseInt(e.target.value))\r\n                 }\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group pt-3\">\r\n          <label htmlFor=\"speed\" className=\"form-label\">Speed: </label>\r\n\r\n          <select\r\n            value={state.fps}\r\n            onChange={e => handleChange(\"fps\", parseInt(e.target.value))}\r\n            className=\"form-control\"\r\n            id=\"speed\"\r\n          >\r\n            <option value=\"500\">Slow</option>\r\n            <option value=\"100\">Normal</option>\r\n            <option value=\"16\">Fast</option>\r\n            <option value=\"0\">Ultra fast</option>\r\n          </select>\r\n\r\n        </div>\r\n\r\n        <KernelSettings\r\n          key=\"kernel_settings\"\r\n          kernel_size={state.kernel_size}\r\n          kernel={state.kernel}\r\n          setKernel={(val) => handleChange(\"kernel\", val)}\r\n        />\r\n\r\n\r\n        <button className=\"btn btn-primary mt-3\" onClick={handleClick}>Start / stop animation</button>\r\n      </article>\r\n\r\n      <Canvases\r\n        key=\"canvases\"\r\n        state={state}\r\n        kernel={state.kernel}\r\n        tick_counter={state.tick_counter}\r\n        // setCanvasDims={(h, w) => {\r\n        //   handleChange(\"canvas_height\", 640);\r\n        //   handleChange(\"canvas_width\", 640);\r\n        // }}\r\n      />\r\n\r\n\r\n    </section>\r\n  )\r\n}","import React from 'react';\r\nimport Canvas from './canvas/canvas.js';\r\nimport {Filters} from './filters/filters';\r\nimport Kernel from \"./canvas/kernel\";\r\n\r\nexport default function GUI(props) {\r\n\r\n  const [state, setState] = React.useState({\r\n    filtered_image: null,\r\n    canvas_dimensions: {}\r\n  });\r\n\r\n  const updateState = (key, value) => {\r\n    setState({\r\n      ...state,\r\n      [key]: value\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/*<Filters*/}\r\n      {/*  canvas_dimensions={state.canvas_dimensions}*/}\r\n      {/*  set_filtered_image={data => updateState('filtered_image', data)}*/}\r\n      {/*/>*/}\r\n      {/*<Canvas*/}\r\n      {/*  canvas_dimensions={state.canvas_dimensions}*/}\r\n      {/*  filtered_image={state.filtered_image}*/}\r\n      {/*  set_canvas_dimensions={data => updateState('canvas_dimensions', data)}*/}\r\n      {/*/>*/}\r\n      <Kernel/>\r\n    </div>\r\n  )\r\n}","import './App.css';\r\n\r\n// Component imports\r\nimport GUI from \"./components/gui.js\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <GUI />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}