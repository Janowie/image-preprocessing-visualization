{"version":3,"sources":["static/mario.png","static/mario_bg.png","components/canvases.js","components/kernels.js","components/gui.js","App.js","reportWebVitals.js","index.js"],"names":["Canvases","props","canvas","React","useRef","canvas_output","useState","state","setState","useEffect","image","crossOrigin","src","Mario","onload","initCanvases","current","getContext","ctx","drawKernel","interval","pixel_size","background_color","tick_counter","x","y","draw","reset","drawLine","f_x","f_y","t_x","t_y","beginPath","moveTo","lineTo","strokeStyle","stroke","drawPixels","row","height","width","drawBackgroundImage","offset","fillStyle","fillRect","drawImage","ctx_output","getPixel","getImageData","data","size","kernel_size","dot_size","strokeRect","j","i","values","push","getKernelValues","color","drawOutputPixel","kernel","v","r","g","b","a","length","split_channels","dot","err","filter_conv","className","ref","KernelSettings","map","val","index","value","handleChange","handleBlur","type","onChange","onBlur","createInput","e","new_values","target","setKernel","focus","parseFloat","GUI","Image","stopTick","clearInterval","toggleAnimation","setInterval","ticks_per_row","Math","floor","canvas_width","num_rows","canvas_height","tick","fps","key","htmlFor","id","parseInt","onClick","style","App","href","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41ac7049.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mario.e404dc0e.png\";","export default __webpack_public_path__ + \"static/media/mario_bg.d6578ab6.png\";","import React from \"react\";\r\nimport {dot} from \"mathjs\";\r\nimport Mario from \"../static/mario_bg.png\";\r\n\r\nexport default function Canvases(props) {\r\n\r\n  const canvas = React.useRef(null);\r\n  const canvas_output = React.useRef(null);\r\n\r\n  const [state, setState] = React.useState({\r\n    \"ctx\": null,\r\n    \"ctx_output\": null,\r\n  })\r\n\r\n  // Initialize state\r\n  React.useEffect(() => {\r\n    if (canvas && canvas_output) {\r\n      props.state.image.crossOrigin = 'anonymous';\r\n      props.state.image.src = Mario;\r\n      props.state.image.onload = () => {\r\n\r\n        initCanvases();\r\n\r\n        setState({\r\n          ...state,\r\n          \"ctx\": canvas.current.getContext(\"2d\"),\r\n          \"ctx_output\": canvas_output.current.getContext(\"2d\")\r\n        });\r\n\r\n        // console.log(canvas.current.height, canvas.current.width);\r\n        // props.setCanvasDims(640,640);\r\n      }\r\n    }\r\n  }, [canvas, canvas_output])\r\n\r\n  React.useEffect(() => {\r\n    if (state.ctx) {\r\n      drawKernel(0, 0);\r\n    }\r\n  }, [state.ctx])\r\n\r\n  React.useEffect(() => {\r\n    if (\r\n      props.state.interval == null && props.state.pixel_size > 0\r\n    ) {\r\n      initCanvases();\r\n    }\r\n  }, [props.state.pixel_size, props.state.background_color])\r\n\r\n  React.useEffect(() => {\r\n    if (props.tick_counter) {\r\n      if (props.tick_counter.x === 0 && props.tick_counter.y === 0) {\r\n        initCanvases();\r\n      }\r\n      draw();\r\n    }\r\n  })\r\n\r\n  React.useEffect(() => {\r\n    if (props.state.reset) {\r\n      initCanvases();\r\n      draw();\r\n    }\r\n  }, [props.state.reset])\r\n\r\n  // ###########################################################################################\r\n  // ## METHODS\r\n  // ###########################################################################################\r\n\r\n  const drawLine = (ctx, f_x, f_y, t_x, t_y) => {\r\n    ctx.beginPath();\r\n    ctx.moveTo(f_x, f_y);\r\n    ctx.lineTo(t_x, t_y);\r\n    ctx.strokeStyle = 'rgba(182,182,182,0.5)';\r\n    if (props.state.pixel_size < 3)\r\n      ctx.strokeStyle = 'rgba(182,182,182,0.01)';\r\n    ctx.stroke();\r\n  }\r\n\r\n  const drawPixels = (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n    for (let row = 0; row < canvas.height; row += props.state.pixel_size) {\r\n      drawLine(ctx, 0, row, canvas.width, row);\r\n      drawLine(ctx, row, 0, row, canvas.height);\r\n    }\r\n  }\r\n\r\n  const drawBackgroundImage = (canvas) => {\r\n\r\n    let ctx = canvas.getContext(\"2d\");\r\n    let offset = props.state.pixel_size;\r\n\r\n    // Draw background\r\n    ctx.fillStyle = props.state.background_color;\r\n    ctx.fillRect(0, 0, 1000, 1000);\r\n\r\n    // Draw image\r\n    ctx.drawImage(props.state.image, offset, offset, canvas.height-offset*2, canvas.width-offset*2);\r\n    drawPixels(canvas);\r\n\r\n  }\r\n\r\n  const initCanvases = () => {\r\n    drawBackgroundImage(canvas.current);\r\n    let ctx_output = canvas_output.current.getContext('2d');\r\n    // Draw background\r\n    ctx_output.fillStyle = props.state.background_color;\r\n    ctx_output.fillRect(0, 0, 1000, 1000);\r\n    drawPixels(canvas_output.current);\r\n  }\r\n\r\n  const getPixel = (x, y) => {\r\n    if (state.ctx) {\r\n      let pixel = state.ctx.getImageData(x, y, 1, 1);\r\n      let data = pixel.data;\r\n\r\n      return data;\r\n    }\r\n    return [];\r\n  }\r\n\r\n  const drawOutputPixel = (x, y, color) => {\r\n    if (state.ctx_output) {\r\n      state.ctx_output.fillStyle = color;\r\n      state.ctx_output.fillRect(x, y, props.state.pixel_size, props.state.pixel_size);\r\n    }\r\n  }\r\n\r\n  const split_channels = (values) => {\r\n    let r = [];\r\n    let g = [];\r\n    let b = [];\r\n    let a = [];\r\n\r\n    for (let i = 0; i < values.length; i++) {\r\n      r.push(values[i][0]);\r\n      g.push(values[i][1]);\r\n      b.push(values[i][2]);\r\n      a.push(values[i][3]);\r\n    }\r\n\r\n    return [r, g, b, a];\r\n  }\r\n\r\n  const filter_conv = (x, y, values) => {\r\n\r\n    let kernel = props.kernel;\r\n    let v = split_channels(values);\r\n\r\n    let color = \"rgba(255,255,255,0)\";\r\n    try {\r\n      color = `rgba(${dot(v[0], kernel)},${dot(v[1], kernel)},${dot(v[2], kernel)},255)`;\r\n    }\r\n    catch (err) {\r\n      // ERROR !\r\n    }\r\n    return color;\r\n  }\r\n\r\n  const drawKernel = (x, y) => {\r\n\r\n    let border_width = 1;\r\n    let size = props.state.kernel_size * props.state.pixel_size - border_width;\r\n    let dot_size = 2;\r\n\r\n    state.ctx.fillStyle = \"rgba(44, 62, 80,0.5)\";\r\n    state.ctx.fillRect(x, y, size, size);\r\n    state.ctx.strokeStyle = \"rgba(241, 196, 15,1.0)\";\r\n    state.ctx.strokeRect(x, y, size, size);\r\n\r\n    for (let j = 0; j < props.state.kernel_size; j++) {\r\n      for (let i = 0; i < props.state.kernel_size; i++) {\r\n        if (i === 1 && j === 1) {\r\n          dot_size = 6\r\n        }\r\n        else {\r\n          dot_size = 2\r\n        }\r\n          state.ctx.fillRect((x + props.state.pixel_size / 2) + props.state.pixel_size * i - dot_size/2, (y + props.state.pixel_size / 2) + props.state.pixel_size * j - dot_size/2, dot_size, dot_size);\r\n      }\r\n    }\r\n  }\r\n\r\n  const getKernelValues = (x, y) => {\r\n    let values = [];\r\n    for (let j = 0; j < props.state.kernel_size; j++) {\r\n      for (let i = 0; i < props.state.kernel_size; i++) {\r\n        values.push(getPixel((x + props.state.pixel_size / 2) + props.state.pixel_size * i, (y + props.state.pixel_size / 2) + props.state.pixel_size * j))\r\n      }\r\n    }\r\n    return values;\r\n  }\r\n\r\n  const draw = () => {\r\n\r\n    if (!state.ctx) {\r\n      return null;\r\n    }\r\n\r\n    let x = props.tick_counter.x * props.state.pixel_size;\r\n    let y = props.tick_counter.y * props.state.pixel_size;\r\n\r\n    // Original canvas\r\n    drawBackgroundImage(canvas.current);\r\n    let values = getKernelValues(x, y);\r\n    drawKernel(x, y);\r\n\r\n    // Output canvas\r\n    drawOutputPixel(x + props.state.pixel_size, y + props.state.pixel_size, filter_conv(x, y, values));\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"row mb-5\">\r\n      <div className=\"col-lg-6 col-md-12 col-sm-12\">\r\n        <h3> Original </h3>\r\n        <canvas\r\n          ref={canvas}\r\n          width=\"640\"\r\n          height=\"640\"\r\n        >\r\n          Your browser does not support the HTML5 canvas tag.\r\n        </canvas>\r\n      </div>\r\n      <div className=\"col-lg-6 col-md-12 col-sm-12\">\r\n        <h3> Filtered </h3>\r\n        <canvas\r\n          ref={canvas_output}\r\n          width=\"640\"\r\n          height=\"640\"\r\n        >\r\n          Your browser does not support the HTML5 canvas tag.\r\n        </canvas>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}","import React from \"react\";\r\n\r\n\r\nconst createInput = (value, index, handleChange, handleBlur) => {\r\n  return (\r\n    <div\r\n      className=\"col-4 mb-2\"\r\n      key={`kernel_input_div_${index}`}\r\n    >\r\n      <input\r\n        key={`kernel_input_${index}`}\r\n        type=\"text\"\r\n        className=\"form-control\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        onBlur={handleBlur}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default function KernelSettings(props) {\r\n\r\n  const handleChange = (index, e) => {\r\n    let new_values = [...props.kernel];\r\n    new_values[index] = e.target.value;\r\n    props.setKernel(new_values);\r\n    // Focus back on input\r\n    e.target.focus();\r\n  }\r\n\r\n  const handleBlur = (index, e) => {\r\n    let new_values = [...props.kernel];\r\n    new_values[index] = parseFloat(e.target.value);\r\n    props.setKernel(new_values);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"form-group pt-3 row kernel_settings\"\r\n    >\r\n      <p>Kernel:</p>\r\n      {props.kernel.map((val, index) => createInput(\r\n        val,\r\n        index,\r\n        e => handleChange(index, e),\r\n        e => handleBlur(index, e)\r\n      ))}\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport Canvases from \"./canvases\";\r\nimport KernelSettings from \"./kernels\";\r\n\r\nimport './canvas.css';\r\n\r\n\r\nexport default function GUI(props) {\r\n\r\n  let tick_counter = null;\r\n  let interval = null;\r\n\r\n  const [state, setState] = React.useState({\r\n    \"interval\": null,\r\n    \"kernel_size\": 3,\r\n    \"kernel\": [ // Initialized with a gaussian blur\r\n        1/16, 1/8, 1/16,\r\n        1/8, 1/4, 1/8,\r\n        1/16, 1/8, 1/16\r\n    ],\r\n    \"pixel_size\": 20,\r\n    \"fps\": 100,\r\n    \"image\": new Image(),\r\n    \"background_color\": \"#e74c3c\",\r\n    \"canvas_height\": 640,\r\n    \"canvas_width\": 640,\r\n    \"tick_counter\": {\r\n        \"x\": 0,\r\n        \"y\": 0\r\n    },\r\n    \"reset\": false\r\n  });\r\n\r\n  const tick = () => {\r\n\r\n    // // Wait until interval initialized\r\n    // if (interval === null) {\r\n    //   return null;\r\n    // }\r\n\r\n    if (!tick_counter) {\r\n      tick_counter = {\r\n        \"x\": 0,\r\n        \"y\": 0\r\n      }\r\n    }\r\n\r\n    let ticks_per_row = Math.floor(state.canvas_width / state.pixel_size) - state.kernel_size; // 2*Math.floor(state.kernel_size/2);\r\n    let num_rows = Math.floor(state.canvas_height / state.pixel_size) - state.kernel_size;\r\n\r\n    // Stop at the end\r\n    if (tick_counter.y == num_rows && tick_counter.x == ticks_per_row) {\r\n      stopTick();\r\n      return null;\r\n    }\r\n\r\n    // Update position\r\n    if (tick_counter.x < ticks_per_row) {\r\n      tick_counter.x += 1;\r\n    }\r\n    else {\r\n      tick_counter.x = 0;\r\n      // Set y\r\n      if (tick_counter.y < num_rows) {\r\n        tick_counter.y += 1;\r\n      }\r\n    }\r\n\r\n    setState({\r\n      ...state,\r\n      \"tick_counter\": tick_counter,\r\n      \"interval\": interval\r\n    })\r\n\r\n  }\r\n\r\n  const reset = () => {\r\n    setState({\r\n      ...state,\r\n      \"interval\": null,\r\n      \"tick_counter\": {\r\n       \"x\": 0,\r\n       \"y\": 0\r\n      },\r\n      \"reset\": true\r\n    })\r\n  }\r\n\r\n  const stopTick = () => {\r\n    // Stop animation - set tick_counter\r\n    clearInterval(state.interval);\r\n    setState({\r\n      ...state,\r\n      \"interval\": null,\r\n      \"reset\": false\r\n    })\r\n  }\r\n\r\n  const toggleAnimation = () => {\r\n    if (state.interval == null) {\r\n      // Reset tick counter\r\n      if (state.tick_counter)\r\n        tick_counter = state.tick_counter;\r\n      interval = setInterval(() => tick(), state.fps);\r\n      setState({\r\n        ...state,\r\n        \"interval\": interval,\r\n        \"reset\": false\r\n      })\r\n    }\r\n    else\r\n      stopTick();\r\n  }\r\n\r\n  const handleClick = () => {\r\n    if (state.canvas_width && state.canvas_height) {\r\n      toggleAnimation();\r\n    }\r\n  }\r\n\r\n  const handleChange = (key, value) => {\r\n    setState({\r\n      ...state,\r\n      [key]: value\r\n    })\r\n  }\r\n\r\n  return (\r\n    <section className=\"container mario-canvas\">\r\n\r\n      <h1 className=\"mt-3 mb-4\">Filter visualization</h1>\r\n\r\n      <article className=\"controls mb-5\">\r\n\r\n        <h3>Settings</h3>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-6\">\r\n            <KernelSettings\r\n              key=\"kernel_settings\"\r\n              kernel_size={state.kernel_size}\r\n              kernel={state.kernel}\r\n              setKernel={(val) => handleChange(\"kernel\", val)}\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-6\">\r\n            <div className=\"row\">\r\n\r\n              <div className=\"form-group pt-3 col-lg-4\">\r\n                <label htmlFor=\"background_color\" className=\"form-label\">Background color: </label>\r\n                <input type=\"color\" className=\"form-control\" id=\"background_color\"\r\n                       value={state.background_color}\r\n                       onChange={e => handleChange(e.target.id, e.target.value)}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group pt-3 col-lg-4\">\r\n                <label htmlFor=\"pixel_size\" className=\"form-label\">Pixel size: </label>\r\n                <input type=\"number\" className=\"form-control\" id=\"pixel_size\"\r\n                       value={state.pixel_size}\r\n                       onChange={e =>\r\n                         handleChange(e.target.id, parseInt(e.target.value))\r\n                       }\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group pt-3 col-lg-4\">\r\n                <label htmlFor=\"speed\" className=\"form-label\">Speed: </label>\r\n\r\n                <select\r\n                  value={state.fps}\r\n                  onChange={e => handleChange(\"fps\", parseInt(e.target.value))}\r\n                  className=\"form-control\"\r\n                  id=\"speed\"\r\n                >\r\n                  <option value=\"500\">Slow</option>\r\n                  <option value=\"100\">Normal</option>\r\n                  <option value=\"16\">Fast</option>\r\n                  <option value=\"0\">Ultra fast</option>\r\n                </select>\r\n\r\n              </div>\r\n\r\n            </div>\r\n\r\n\r\n            <button\r\n              className=\"btn btn-primary mt-4 btn-lg\"\r\n              onClick={handleClick}\r\n              style={{\r\n                \"backgroundColor\": state.background_color\r\n              }}\r\n            >\r\n              {(state.interval ? \"Stop!\" : \"GO!\")}\r\n            </button>\r\n\r\n            {(state.interval === null &&\r\n            <button\r\n              className=\"btn btn-outline-primary mt-4 btn-lg d-inline-block ml-3 \"\r\n              onClick={reset}\r\n              style={{\r\n                \"borderColor\": state.background_color,\r\n                \"color\": state.background_color\r\n              }}\r\n            >\r\n              Reset\r\n            </button>)}\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n      </article>\r\n\r\n      <Canvases\r\n        key=\"canvases\"\r\n        state={state}\r\n        kernel={state.kernel}\r\n        tick_counter={state.tick_counter}\r\n        // setCanvasDims={(h, w) => {\r\n        //   handleChange(\"canvas_height\", 640);\r\n        //   handleChange(\"canvas_width\", 640);\r\n        // }}\r\n      />\r\n\r\n\r\n    </section>\r\n  )\r\n}","import './App.css';\r\nimport Mario from \"./static/mario.png\";\r\n\r\n// Component imports\r\nimport GUI from \"./components/gui.js\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <nav className=\"navbar navbar-light bg-light container-paddings\">\r\n        <div className=\"container\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            <img\r\n              src={Mario}\r\n              width=\"30\"\r\n              height=\"30\"\r\n              className=\"d-inline-block align-top\"\r\n              style={{\r\n                \"marginRight\": \"15px\"\r\n              }}\r\n              alt=\"Mario\"/>\r\n                Visualize\r\n          </a>\r\n        </div>\r\n      </nav>\r\n\r\n      <GUI />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}